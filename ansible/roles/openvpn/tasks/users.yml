#Generate client configuration files



- name: Include users dict
  include_vars:
    file: users.yml

- name: Create directory for tar archives
  file:
    state: directory
    path: "{{ openvpn_tar_path }}"

- name: Generate cert for user
  shell: ./pkitool {{ item.value.id }}
  args:
    chdir: "/etc/openvpn/easy-rsa"
    creates: "{{ openvpn_key_dir }}/{{ item.value.id }}.crt"
  with_dict: "{{ users }}"
  environment:
    EASY_RSA: "/etc/openvpn/easy-rsa"
    KEY_CONFIG: "/etc/openvpn/easy-rsa/openssl.cnf"
    KEY_DIR: "{{ openvpn_key_dir }}"
    CA_EXPIRE: "{{ openvpn_key_ca_expire }}"
    KEY_EXPIRE: "{{ openvpn_key_expire }}"
    KEY_SIZE: "{{ openvpn_key_size }}"
    KEY_COUNTRY: "{{ openvpn_key_country }}"
    KEY_PROVINCE: "{{ openvpn_key_province }}"
    KEY_CITY: "{{ openvpn_key_city }}"
    KEY_ORG: "{{ openvpn_key_org }}"
    KEY_EMAIL: "{{ openvpn_key_email }}"

- name: Render client.ovpn for Windows clients
  template:
    src: client.conf.j2
    dest: "{{ openvpn_key_dir }}/{{ openvpn_client_prefix }}-{{ user.value.id}}.ovpn"
  vars: 
    client_cn: "{{ user.value.id }}"
  with_dict: "{{ users }}"
  loop_control:
    loop_var: user

- name: Render client.conf for Linux clients
  template:
    src: client.conf.j2
    dest: "{{ openvpn_key_dir }}/{{ openvpn_client_prefix }}-{{ user.value.id}}.conf"
  vars:
    client_cn: "{{ user.value.id }}"
  with_dict: "{{ users }}"
  loop_control:
    loop_var: user

- name: Archive client files
  archive:
    path:
      - "{{ openvpn_signing_ca_cert }}"
      - "{{ openvpn_key_dir }}/{{ user.value.id }}.crt"
      - "{{ openvpn_key_dir }}/{{ user.value.id }}.key"
      - "{{ openvpn_key_dir }}/{{ openvpn_client_prefix }}-{{ user.value.id }}.conf"
      - "{{ openvpn_key_dir }}/{{ openvpn_client_prefix }}-{{ user.value.id }}.ovpn"
    dest: "{{ openvpn_tar_path }}/{{ user.value.id }}.tar.gz"
  with_dict: "{{ users }}"
  loop_control:
    loop_var: user

  
  
    
